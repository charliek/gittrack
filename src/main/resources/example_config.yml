# Replace this oauth information with your application information. If you don't
# have an application one can be registered here:
# https://github.com/settings/applications/new
github:
  clientID: xxxxxxxxxxxxxxxxxxxx
  clientSecret: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  applicationScope: repo

httpClient:
  # The socket timeout value. If a read or write to the underlying
  # TCP/IP connection hasn't succeeded after this duration, a
  # timeout exception is thrown.
  timeout: 4000ms

  # The connection timeout value. If a TCP/IP connection cannot be
  # established in this time, a timeout exception is thrown.
  connectionTimeout: 500ms

  # The time a TCP/IP connection to the server is allowed to
  # persist before being explicitly closed.
  timeToLive: 1 hour

  # If true, cookies will be persisted in memory for the duration
  # of the client's lifetime. If false, cookies will be ignored
  # entirely.
  cookiesEnabled: false

  # The maximum number of connections to be held in the client's
  # connection pool.
  maxConnections: 1024

  # The maximum number of connections per "route" to be held in
  # the client's connection pool. A route is essentially a
  # combination of hostname, port, configured proxies, etc.
  maxConnectionsPerRoute: 1024

  # The default value for a persistent connection's keep-alive.
  # A value of 0 will result in connections being immediately
  # closed after a response.
  keepAlive: 0s


http:

  # The port on which the HTTP server listens for service requests.
  port: 8910

  # The port on which the HTTP server listens for administrative requests.
  adminPort: 8911

  # Maximum number of threads.
  maxThreads: 100

  # Minimum number of thread to keep alive.
  minThreads: 10

  # The type of connector to use. Other valid values are "nonblocking" or "legacy". In general, the
  # blocking connector should be used for low-latency services with short request durations. The
  # nonblocking connector should be used for services with long request durations or which
  # specifically take advantage of Jetty's continuation support.
  # If you need SSL support, you can either choose from "nonblocking+ssl" or "legacy+ssl".
  connectorType: blocking

  # The maximum amount of time a connection is allowed to be idle before being closed.
  maxIdleTime: 5s

  # The number of threads dedicated to accepting connections. If omitted, this defaults to the
  # number of logical CPUs on the current machine.
  acceptorThreads: 3

  # The offset of the acceptor threads' priorities. Can be [-5...5], with -5 dropping the acceptor
  # threads to the lowest possible priority and with 5 raising them to the highest priority.
  acceptorThreadPriorityOffset: 0

  # The number of unaccepted requests to keep in the accept queue before refusing connections. If
  # set to -1 or omitted, the system default is used.
  acceptQueueSize: 100

  # The maximum number of buffers to keep in memory.
  maxBufferCount: 1024

  # The initial buffer size for reading requests.
  requestBufferSize: 32KB

  # The initial buffer size for reading request headers.
  requestHeaderBufferSize: 6KB

  # The initial buffer size for writing responses.
  responseBufferSize: 32KB

  # The initial buffer size for writing response headers.
  responseHeaderBufferSize: 6KB

  # Enables SO_REUSEADDR on the server socket.
  reuseAddress: true

  # Enables SO_LINGER on the server socket with the specified linger time.
  soLingerTime: 1s

  # The number of open connections at which the server transitions to a "low-resources" mode.
  lowResourcesConnectionThreshold: 25000

  # When in low-resources mode, the maximum amount of time a connection is allowed to be idle before
  # being closed. Overrides maxIdleTime.
  lowResourcesMaxIdleTime: 5s

  # If non-zero, the server will allow worker threads to finish processing requests after the server
  # socket has been closed for the given amount of time.
  shutdownGracePeriod: 2s

  # If true, the HTTP server will prefer X-Forwarded headers over their non-forwarded equivalents.
  useForwardedHeaders: true

  # If true, forces the HTTP connector to use off-heap, direct buffers.
  useDirectBuffers: true

  # The hostname of the interface to which the HTTP server socket wil be found. If omitted, the
  # socket will listen on all interfaces.
  # bindHost: app1.example.com

# ssl:
# keyStorePath: ./example.keystore
# keyStorePassword: example
#
# keyStoreType: JKS # (optional, JKS is default)

  # HTTP request log settings
  requestLog:
    # Settings for logging to stdout.
    console:
      # If true, write log statements to stdout.
      enabled: true

    # Settings for logging to a file.
    file:
      # If true, write log statements to a file.
      enabled: true

      # The file to which statements will be logged.
      currentLogFilename: /var/log/gittrack/gittrack_requests.log

      # When the log file rolls over, the file will be archived to example-2012-03-15.log.gz,
      # example.log will be truncated, and new statements written to it.
      archivedLogFilenamePattern: /var/log/gittrack/gittrack_requests-%d.log.gz

      # The maximum number of log files to archive.
      archivedFileCount: 5

    # Settings for logging to syslog.
    syslog:

      # If true, write log statements to syslog.
      enabled: false

      # The hostname of the syslog server to which statements will be sent.
      # N.B.: If this is the local host, the local syslog instance will need to be configured to
      # listen on an inet socket, not just a Unix socket.
      host: localhost

      # The syslog facility to which statements will be sent.
      facility: local0

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
    com.example.app: DEBUG

    org.hibernate.SQL: ALL

  # Settings for logging to stdout.
  console:

    # If true, write log statements to stdout.
    enabled: true

    # Do not display log statements below this threshold to stdout.
    threshold: ALL

  # Settings for logging to a file.
  file:

    # If true, write log statements to a file.
    enabled: true

    # Do not write log statements below this threshold to the file.
    threshold: ALL

    # The file to which statements will be logged.
    currentLogFilename: /var/log/gittrack/gittrack.log

    # When the log file rolls over, the file will be archived to example-2012-03-15.log.gz,
    # example.log will be truncated, and new statements written to it.
    archivedLogFilenamePattern: /var/log/gittrack/gittrack-%d.log.gz

    # The maximum number of log files to archive.
    archivedFileCount: 5

  # Settings for logging to syslog.
  syslog:

    # If true, write log statements to syslog.
    enabled: false

    # The hostname of the syslog server to which statements will be sent.
    # N.B.: If this is the local host, the local syslog instance will need to be configured to
    # listen on an inet socket, not just a Unix socket.
    host: localhost

    # The syslog facility to which statements will be sent.
    facility: local0
